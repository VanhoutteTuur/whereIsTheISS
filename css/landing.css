:root {
	--global-color-back: var(--color-gamma);
	--global-color-front: var(--color-white);

	/* Sizes */
	--logo-size: 3.5rem; /* 3.5 * 16px = 56px */
}

html {
	background-image: linear-gradient(170deg, var(--global-color-back), var(--color-alpha));
	color: var(--global-color-front);
	
}

@media (min-width: 72rem) {
	html {
		font-size: 1.25rem; /* 20px */
	}
}

::-moz-selection {
	color: var(--global-color-back);
	background-color: var(--global-color-front);
	text-shadow: none;
}

::selection {
	color: var(--global-color-back);
	background-color: var(--global-color-front);
	text-shadow: none;
}

.o-grid-container {
	display: grid;
    grid-template-rows: auto auto;
    justify-content: center;
    align-items: center;
	grid-gap: var(--global-baseline);
}


@media (min-width: 62rem) {
	/* on large screens: rows instead of columns */
	.o-grid-container {
		grid-template-columns: auto auto;
        height: 100vh;
        grid-gap: 0;
        justify-content: center;
        align-items: center;
	}
}

.o-button-reset {
	border: none;
	margin: 0;
	padding: 0;
	width: auto;
	overflow: visible;
	background: transparent;

	/* inherit font & color from ancestor */
	color: inherit;
	font: inherit;

	/* Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+. */
	line-height: normal;

	/* Corrects font smoothing for webkit */
	-webkit-font-smoothing: inherit;
	-moz-osx-font-smoothing: inherit;

	/* Corrects inability to style clickable `input` types in iOS */
	-webkit-appearance: none;
}

.c-phone {
    margin: 1rem 0;
    display: grid;
	justify-content: center;
}

.c-phone__image {
	max-width: 20rem;
}



@media (min-width: 36rem) {
	.c-phone {
		margin: 0;
	}

	.c-phone__image {
    	max-height: 70vh;
	}	
}


.c-form {
	margin: 1rem auto;
	width: 100%;
	max-width: 24rem;
}

@media (min-width: 36rem) {
	.c-form {
		margin: 0 3rem;
		max-width: 30rem;
	}
}

.c-header {
	border-bottom: 1px solid var(--global-color-front);
	display: flex;
	align-items: center;
}

.c-header__icon {
	height: var(--logo-size);
	width: var(--logo-size);
	margin-right: var(--global-whitespace-sm);
}

.c-header__text {
	font-size: 2rem;
	font-weight: 400;
}

@media (min-width: 600px) {
	.c-header__text {
		font-size: 2.4rem;
	}
}

.c-input {
	background-color: var(--color-white);
	color: var(--global-color-back);
	width: 100%;
	display: block;
	font-size: 1.2rem;
	font-family: inherit;
	border: 2px solid transparent;
	box-shadow: 0 3px 3px rgba(0, 0, 0, 0.10);
	outline: none;

	margin-bottom: var(--global-whitespace-xs);
	border-radius: 4px;
	padding: var(--global-baseline);
}

.c-input:focus {
	border: 2px solid var(--color-beta);
}

.c-input::selection {
	background-color: var(--global-color-back);
	color: var(--color-white)
}

.c-input::placeholder {
	color: var(--global-color-back);
}

.c-input.has-error {
	border: 2px solid red;
}

.c-button {
	display: block;
	margin: 0 auto;
	background-color: var(--color-alpha);
	color: var(--global-color-front);
	border: 2px solid transparent;
	border-radius: var(--global-borderRadius);
	padding: var(--global-whitespace-xs) var(--global-whitespace-sm);
	cursor: pointer;
	outline: none;

	box-shadow: 3px 6px 6px rgba(0, 0, 0, 0.40);

	font-size: 1rem;
	font-weight: bold;

	transform: translateY(0);
}

.c-button:hover,
.c-button:focus {
	border: 2px solid var(--color-epsilon);
}

.c-button:active {
	transform: translateY(3px);
	transition: transform .1s ease-out;
}

.c-errorlabel {
	margin-top: 1rem;
	/* Give the label a static height, so if the string is empty it doesn't move the layout */
	height: 1.5rem;
	display: block;

	color: rgb(255, 232, 232);
	text-align: center;
}

.u-text-bold {
	font-weight: bold;
}
